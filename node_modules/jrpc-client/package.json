{
  "name": "jrpc-client",
  "description": "json-rpc 2.0 client implement",
  "main": "./jrpcClient.js",
  "author": {
    "name": "hhh"
  },
  "version": "0.0.6",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/caolan/async/raw/master/LICENSE"
    }
  ],
  "dependencies": {
    "debug": ""
  },
  "readme": "## jrpc-client\njson rpc 2.0规范的客户端实现\n\n### Usage\n```ruby\nvar jrpc=new (require('jrpc-client'))();\n\njrpc.connect(port, ip)\n\t.on('error', console.log)\n    .on('connect broken', function() {setTimeout(jrpc.reconnect.bind(jrpc), 1000)});\n\njrpc.call('some_function', args, console.log);\n```\n\n### Update\n现在可以更简单的使用jrpc了。以前的用法经常在connect broken时忘记bind(jrpc)，现在修改成了传入opt\n```ruby\nvar jrpc=new (require('jrpc-client'))();\n\t.connect('127.0.0.1:8887');\n\njrpc.call('some_function', args, console.log);\n```\nopt={autoretry:ms, emitErr:boolean}\nautoretry默认是1000ms，emitErr默认是false\n\nconnect现在支持传入'127.0.0.1:8887'这样的字符串来连接了。\n",
  "readmeFilename": "readme.md",
  "_id": "jrpc-client@0.0.6",
  "scripts": {},
  "_shasum": "060e1298100bce4d20b90763ca297094e35a8819",
  "_from": "jrpc-client@latest",
  "_resolved": "file:node_modules\\jrpc-client"
}
